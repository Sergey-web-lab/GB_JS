/*
1. Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в
градусах по Фаренгейту. Подсказка: расчет идет по формуле Tf = (9 / 5) * Tc + 32, где Tf —
температура по Фаренгейту, Tc — по Цельсию.
2. Объявить две переменные: admin и name. Записать в name строку "Василий"; Скопировать
значение из name в admin. Вывести admin (должно вывестись «Василий»).
3. * Чему будет равно JS-выражение 1000 + "108"?
4. * Самостоятельно разобраться с атрибутами тега script (async и defer)
*/


// Решение:

// 1. Задать температуру в градусах по Цельсию. Вывести в alert соответствующую температуру в
// градусах по Фаренгейту. Подсказка: расчет идет по формуле Tf = (9 / 5) * Tc + 32, где Tf —
// температура по Фаренгейту, Tc — по Цельсию.

let Tf;
let Tc;
Tc = 25;
Tf = (9 / 5) * Tc + 32;
alert(Tf);


// 2. Объявить две переменные: admin и name. Записать в name строку "Василий"; Скопировать
// значение из name в admin. Вывести admin (должно вывестись «Василий»).

{
    let admin;
    let name = 'Василий';
    admin = name;
    alert(admin);
}


// 3. * Чему будет равно JS-выражение 1000 + "108"?

// Ответ: выражение будет равно 1000108. 
// Выполним проверку: 

let a = 1000 + "108";
alert(a);


// 4. * Самостоятельно разобраться с атрибутами тега script (async и defer)

// Ответ:

// Атрибут async позволяет после обработки страницы подгружать находязиеся скрипты одновременно и не зависимо друг от друга, запуская их по принципу что загрузилось ранее, то и будет исполнено.

// Атрибут defer также позволяет подгружать находязиеся скрипты одновременно и не зависимо друг от друга, но запуск производиться в строгой последовательности, т.е. в той, в которой скрипты подключаются в файле HTML.

// Оба атрибута и async и defer позводяют видеть и взаимодействовать со страницей до исполнения скиптов, т.е.скрипты не блокируют загрузку самой страницы при своей незагрузке.